package io.javabrains.moviecatalogservice.controllers;

import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;

import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;

import io.javabrains.moviecatalogservice.dtos.CatalogItem;
import io.javabrains.moviecatalogservice.dtos.Movie;
import io.javabrains.moviecatalogservice.dtos.Rating;

@RestController
@RequestMapping("/catalog")
public class MovieCatalogResource {

	@GetMapping(value = "/{userId}", produces = { MediaType.APPLICATION_JSON_VALUE,
			MediaType.APPLICATION_XML_VALUE }, consumes = { MediaType.APPLICATION_JSON_VALUE,
					MediaType.APPLICATION_XML_VALUE })
	public List<CatalogItem> getCatalog(@PathVariable("userId") String userId) {

		RestTemplate restTemplate = new RestTemplate();
		
		Movie movie = restTemplate.getForObject("http://localhost:8082/movies/1", Movie.class);
		
		

		List<Rating> ratings = Arrays.asList(new Rating("1234", 4), new Rating("5678", 3));

		return ratings.stream().map(rating -> {
			restTemplate.getForObject("http://localhost:8082/movies/" + rating.getMovieId(), Movie.class);
			return new CatalogItem("Transformers", "Test", 4);
		}).collect(Collectors.toList());

//		return Collections.singletonList(new CatalogItem("Transformers", "Test", 4));
	}

}